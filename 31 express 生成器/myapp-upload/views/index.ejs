<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
</head>

<body>
  <h1>
    <%= title %>
  </h1>
  <p>Welcome to <%= title %>
  </p>

  <div>
    <button id="exit">退出登录</button>
  </div>

  <div>
    用户名 <input id="username" type="text">
    <br>
    密码：<input id="password" type="password">
    <br>
    年龄：<input type="number" id="age">
    <br>
    头像：<input type="file" id="avatar">
  </div>

  <button class="addBtn">添加用户</button>
  <button class="updateBtn">更新用户</button>
  <button class="deleteBtn">删除用户</button>

  <div class="list">

  </div>

  <table border="1">
    <thead>
      <tr>
        <td>id</td>
        <td>username</td>
        <td>age</td>
        <td>option</td>
      </tr>
    <tbody>

    </tbody>
    </thead>
  </table>
  <script src="https://unpkg.com/axios@1.1.2/dist/axios.min.js"></script>

  <script>
    //拦截请求
    axios.interceptors.request.use(function (config) {
      // 请求发出前执行的方法 

      //!每次发请求之前要给后端token
      const token = localStorage.getItem("token")

      config.headers.Authorization = `Bearer ${token}`  //不成文规定加beraer
      //config请求对象
      return config;
    }, function (error) {
      return Promise.reject(error);
    });


    //拦截响应
    axios.interceptors.response.use(function (response) {
      // 请求成功后第一个调用的方法
      console.log(response)
      //设置localStorage
      const { authorization } = response.headers
      authorization && localStorage.setItem("token", authorization)


      return response;
    }, function (error) {
      // Any status codes that falls outside the range of 2xx cause this function to trigger
      // Do something with response error
      console.log('error ',error.response.status)
      if(error.response.status===401){
        localStorage.removeItem("token")
        location.href = "/login"
      }
      return Promise.reject(error);
    });
  </script>

  <script>
    const username = document.querySelector("#username")
    const password = document.querySelector("#password")
    const age = document.querySelector("#age")
    const avatar = document.querySelector("#avatar")
    const addBtn = document.querySelector(".addBtn")
    const updateBtn = document.querySelector(".updateBtn")
    const deleteBtn = document.querySelector(".deleteBtn")
    const exitBtn = document.querySelector("#exit")

    const list = document.querySelector('.list')

    exitBtn.onclick = () => {
      /* fetch("/api/logout").then(res=>res.json()).then(res=>{
        console.log(res )
        if(res.ok===1){
          location.href='/login'
        }
      }) */

      localStorage.removeItem("token")
      location.href= "/login"
      console.log("??????")
    }


    addBtn.addEventListener("click", () => {

      /* fetch("/api/users",{
        method:"POST",
        headers:{
          "Content-Type":"application/json"
        },
        body:JSON.stringify({
          username:username.value,
          password:password.value,
          age:age.value
        })
      }).then(res=>res.json()).then(res=>{
        console.log(res)
        if(res.ok===0){
          location.href='/login'
        }
      }) */

      console.log(username.value,password.value,age.value,avatar.files)
      /* axios.post("/api/users", {
        username: username.value,
        password: password.value,
        age: age.value,
        //avatar:,
      }).then(res => {
        console.log(res)
      }) */

      //!用表单的形式上传
      const formsdata = new FormData()
      formsdata.append("username",username.value)
      formsdata.append("password",password.value)
      formsdata.append("age",age.value)
      formsdata.append("avatar",avatar.files[0])

      axios.post("/api/users",formsdata,{
        "Content-Type":"multipart/form-data"
      }).then(res=>{
        console.log(res)
      })
    })

    updateBtn.addEventListener("click", () => {
      console.log("???")
      /* fetch("/api/users/640c45cec483400536ecc0e7",{
        method:"PUT",
        headers:{
          "Content-Type":"application/json"
        },
        body:JSON.stringify({
          username:'修改',
          password:'修改',
          age:100000
        })
      }).then(res=>res.json()).then(res=>{
        console.log(res)
        if(res.ok===0){
          location.href='/login'
        }
      }) */

      axios.put("/api/users/640c45cec483400536ecc0e7", {
        username: '修改',
        password: '修改',
        age: 100000
      }).then(res => {
        console.log(res.data)
      })
    })




    deleteBtn.addEventListener("click", () => {
      /* fetch('/api/users/640d9cd6272b9dc55d24aa6e',{
        method:"DELETE"
      }).then(res=>res.json()).then(res=>{
        console.log(res)
        if(res.ok===0){
          location.href='/login'
        }
      }) */

      axios.delete("/api/users/640d9cd6272b9dc55d24aa6e").then(res => {
        console.log(res)
      })
    })


    /* fetch("/api/users").then(res=>res.json()).then(res=>{
      console.log(res)
      if(res.ok===0){
          location.href='/login'
        }
  
      list.innerHTML = res.map(item=>`
      <span>${item.username}</span>
      <span>${item.password}</span>
      `)

      let tbody = document.querySelector("tbody")
      tbody.innerHTML = res.map(item=>`
        <tr>
            <td>${item._id}</td>
            <td>${item.username}</td>
            <td>${item.age}</td>
            <td>
              <button onclick="deleteThis('${item._id}')">删除此项</button>  
            </td>
        </tr>
      `).join("")
      
    })
 */
    axios.get("/api/users").then(res => {
      if (res.data.ok === 0) {
        location.href = '/login'
      }

      /* list.innerHTML = res.data.map(item => `
      <span>${item.username}</span>
      <span>${item.password}</span>
      `) */

      let tbody = document.querySelector("tbody")
      tbody.innerHTML = res.data.map(item => `
        <tr>
            <td>${item._id}</td>
            <td>${item.username}</td>
            <td>${item.age}</td>
            <td><img style='width:50px;' src='${item.avatar}'></img></td>
            <td>
              <button onclick="deleteThis('${item._id}')">删除此项</button>  
            </td>
        </tr>
      `).join("")
    })

    function deleteThis(id) {
      console.log('aaa')
      fetch(`/api/users/${id}`, {
        method: "DELETE"
      }).then(res => res.json()).then(res => {

        console.log(res)
        if (res.ok === 0) {
          location.href = '/login'
        } else {
          location.reload()
        }
      })
    }


  </script>
</body>

</html>